@model IEnumerable<Restaurant_QKA.Models.CartItem>
@{
    ViewBag.Title = "Checkout";
    Layout = "~/Areas/User/Views/Shared/_Layout.cshtml";
}

<h2 style="margin-top: 20px">Checkout</h2>
<div>
    <h3>Thông tin giỏ hàng</h3>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>#</th>
                <th>Sản phẩm</th>
                <th>Số lượng</th>
                <th>Đơn giá</th>
                <th>Tổng</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                int count = 1;
                foreach (var item in Model)
                {
                    <tr>
                        <td>@count</td>
                        <td>@item.MenuItem.Name</td>  <!-- Product Name -->
                        <td>@item.Quantity</td>        <!-- Quantity -->
                        <td>@String.Format("{0:C}", item.Price)</td>  <!-- Price per item -->
                        <td>@String.Format("{0:C}", item.Total)</td>  <!-- Total price -->
                    </tr>
                    count++;
                }
            }
            else
            {
                <tr>
                    <td colspan="5" class="text-center">Giỏ hàng trống!</td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="4" class="text-right"><b>Tổng cộng:</b></td>
                <td><b>@ViewBag.TotalAmount</b></td>
            </tr>
        </tfoot>
    </table>
</div>

<div>
    <h3>Thông tin thanh toán</h3>
    <form id="checkoutForm" method="post" action="@Url.Action("Checkout", "Carts")">
        @Html.AntiForgeryToken()

        <!-- Giữ giá trị iduser trong hidden input -->
        <input type="hidden" name="iduser" value="@Session["UserID"]" />

        <!-- Phương thức thanh toán -->
        <!-- Form chọn phương thức thanh toán -->
        <div class="form-group">
            <label for="paymentMethod">Phương thức thanh toán</label>
            <select name="paymentMethod" id="paymentMethod" class="form-control" required>
                <option value="">-- Chọn phương thức thanh toán --</option>
                <option value="1">Ví điện tử</option>
                <option value="2">Thanh toán trực tiếp</option>
                <option value="3">Thẻ tín dụng</option>
            </select>

            <!-- Nút để mở Modal (cần ID #openModalButton) -->

        </div>



        <!-- Mã giảm giá -->
        <div class="form-group">
            <label for="valuecoupon">Mã giảm giá</label>
            <input type="text" name="valuecoupon" id="valuecoupon" class="form-control" placeholder="Nhập mã giảm giá nếu có" />
        </div>

        <!-- Hiển thị nút thanh toán nếu người dùng đã đăng nhập -->
        @if (Session["UserID"] != null)
        {
            <button type="submit" class="btn btn-primary">Thanh toán</button>
        }
        else
        {
            <p>Bạn cần đăng nhập để thanh toán.</p>
        }
    </form>
</div>









<!-- Modal -->
<div class="modal" id="paymentModal" tabindex="-1" role="dialog" aria-labelledby="paymentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="paymentModalLabel">Chọn phương thức thanh toán</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Đây là modal hiển thị khi bạn chọn phương thức thanh toán.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary">Xác nhận</button>
            </div>
        </div>
    </div>
</div>










<script>
    // Hàm kiểm tra khi nhấn nút thanh toán
    function submitOrder(iduser, valuecoupon, idcoupon) {
        // Lấy giá trị phương thức thanh toán được chọn
        const paymentSelect = document.getElementById('payment');
        const paymentMethod = paymentSelect.value;

        if (!paymentMethod) {
            // Hiển thị thông báo lỗi nếu chưa chọn phương thức thanh toán
            Swal.fire({
                icon: 'error',
                title: 'Lỗi',
                text: 'Vui lòng chọn phương thức thanh toán!',
            });
            return;
        }

        processOrder(iduser, paymentMethod, valuecoupon, idcoupon).then(flagsuccess => {
            if (flagsuccess) {
                if (paymentMethod == 1) {
                    // Hiển thị modal và bắt đầu countdown
                    const qrModal = new bootstrap.Modal(document.getElementById('qrModal'));
                    const countdownElement = document.getElementById('countdown');
                    let countdown = 10; // Số giây đếm ngược

                    qrModal.show(); // Hiển thị modal
                    countdownElement.textContent = countdown;

                    const interval = setInterval(() => {
                        countdown -= 1;
                        countdownElement.textContent = countdown;

                        if (countdown <= 0) {
                            clearInterval(interval);
                            qrModal.hide(); // Tắt modal sau khi countdown kết thúc
                            Swal.fire({
                                icon: 'success',
                                title: 'Thành công',
                                text: 'Đơn hàng đã được tạo thành công!',
                            }).then(() => {
                                // Làm mới trang hoặc chuyển hướng sau khi xử lý xong
                                window.location.reload();
                            });
                        }
                    }, 1000)
                }

            }
        });
    }


    // Gửi yêu cầu đến backend
    function processOrder(iduser, paymentMethod, valuecoupon, idcoupon) {
        return fetch('/Carts/Checkout', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                iduser: iduser,
                paymentMethod: paymentMethod,
                valuecoupon: valuecoupon,
                idcoupon: idcoupon
            })
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    if (paymentMethod == 1) {
                        // Với thanh toán Momo, không hiển thị thông báo Swal.fire
                        return true;
                    } else {
                        // Hiển thị thông báo thành công cho các phương thức khác
                        Swal.fire({
                            icon: 'success',
                            title: 'Thành công',
                            text: 'Đơn hàng đã được tạo thành công!',
                        }).then(() => {
                            // Làm mới trang hoặc chuyển hướng sau khi xử lý xong
                            window.location.reload();
                        });
                        return true;
                    }
                } else if (data.error && data.Flagquan === 1) {
                    // Thông báo lỗi do số lượng không đủ
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: 'Số lượng tồn không hợp lệ. Vui lòng kiểm tra lại!',
                    });
                    return false;
                } else {
                    // Thông báo lỗi khác từ backend
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: 'Giỏ hàng trống. Vui lòng mua thêm sản phẩm!',
                    });
                    return false;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                // Hiển thị thông báo lỗi nếu có sự cố trong quá trình xử lý
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi',
                    text: 'Không thể xử lý yêu cầu của bạn. Vui lòng thử lại sau!',
                });
                return false;
            });
    }

    $("#checkoutForm").on("submit", function (e) {
        e.preventDefault();

        var form = $(this);
        var token = $("input[name='__RequestVerificationToken']").val();  // Lấy token từ form

        $.ajax({
            type: "POST",
            url: form.attr("action"),
            data: form.serialize() + "&__RequestVerificationToken=" + token,  // Thêm token vào dữ liệu
            success: function (response) {
                if (response.success) {
                    alert("Đặt hàng thành công!");
                    window.location.href = '/User/Home/Index';
                } else if (response.error && response.Flagquan === 1) {
                    alert("Số lượng sản phẩm không đủ trong kho. Vui lòng kiểm tra lại!");
                } else {
                    alert("Có lỗi xảy ra. Vui lòng thử lại!");
                }
            },
            error: function () {
                alert("Không thể gửi yêu cầu. Vui lòng thử lại sau.");
            }
        });
    });
</script>


<!-- Thêm CSS của Bootstrap -->
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">

<!-- Thêm jQuery đầy đủ (không phải slim) -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>

<!-- Thêm JavaScript của Bootstrap -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

